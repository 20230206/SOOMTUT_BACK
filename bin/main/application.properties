# Database Connection
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://${DB_ENDPOINT}:3306/tutoring?createDatabaseIfNotExist=true&serverTimezone=UTC&characterEncoding=UTF-8
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# Jpa-Hibernate Config
spring.jpa.hibernate.ddl-auto = update
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql = true
spring.jpa.properties.hibernate.use_sql_comments=true

# jwt-secret-key
jwt.secret.key=${JWT_SECRET_KEY}

# logging
logging.level.org.springframework.core.LocalVariableTableParameterNameDiscoverer = error

# Google OAuth2 Config
spring.security.oauth2.client.registration.google.client-id = ${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret = ${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope = profile, email

# Kakao OAuth2 Config
spring.security.oauth2.client.registration.kakao.client-id = ${KAKAO_CLIENT_ID}
spring.security.oauth2.client.registration.kakao.client-secret = ${KAKAO_CLIENT_SECRET}
spring.security.oauth2.client.registration.kakao.scope = profile_nickname, account_email
spring.security.oauth2.client.registration.kakao.client-name = kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type = authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri = http://${BACK_ENDPOINT}:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method = POST

spring.security.oauth2.client.provider.kakao.authorization-uri = https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri = https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri = https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute = id

# Naver OAuth2 Config
spring.security.oauth2.client.registration.naver.client-id = ${NAVER_CLIENT_ID}
spring.security.oauth2.client.registration.naver.client-secret = ${NAVER_CLIENT_SECRET}
spring.security.oauth2.client.registration.naver.scope = name, email
spring.security.oauth2.client.registration.naver.client-name = Naver
spring.security.oauth2.client.registration.naver.authorization-grant-type = authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri = http://${BACK_ENDPOINT}:8080/login/oauth2/code/naver

spring.security.oauth2.client.provider.naver.authorization-uri = https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri = https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri = https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute = response

# endpoints
endpoint.back=${BACK_ENDPOINT}
endpoint.front=${FRONT_ENDPOINT}

# S3 Config
cloud.aws.credentials.access-key= ${S3_ACCESS_KEY}
cloud.aws.credentials.secret-key= ${S3_SECRET_KEY}
cloud.aws.s3.bucket= soomtut
cloud.aws.s3.profiledir = profile
cloud.aws.s3.postdir = postimage
cloud.aws.region.static= ap-northeast-2
cloud.aws.stack.auto= false
